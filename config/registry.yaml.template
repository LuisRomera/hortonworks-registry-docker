# registries configuration
modules:
  - name: schema-registry
    className: com.hortonworks.registries.schemaregistry.webservice.SchemaRegistryModule
    config:
      schemaProviders:
        - providerClass: "com.hortonworks.registries.schemaregistry.avro.AvroSchemaProvider"
          defaultSerializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotSerializer"
          defaultDeserializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotDeserializer"
      # schema cache properties
      # inmemory schema versions cache size
      schemaCacheSize: 10000
      # inmemory schema version cache entry expiry interval after access
      schemaCacheExpiryInterval: 3600

#
# Filesystem based jar storage
fileStorageConfiguration:
  className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: "/tmp/schema-registry/jars"

# MySQL based jdbc provider configuration is:
storageProviderConfiguration:
 providerClass: "com.hortonworks.registries.storage.impl.jdbc.JdbcStorageManager"
 properties:
   db.type: "mysql"
   queryTimeoutInSecs: 30
   db.properties:
     dataSourceClassName: "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
     dataSource.url: "jdbc:mysql://$DB_HOST:$DB_PORT/$DB_NAME"
     dataSource.user: "$DB_USER"
     dataSource.password: "$DB_PASSWORD"

#swagger configuration
swagger:
  resourcePackage: com.hortonworks.registries.schemaregistry.webservice

#enable CORS, may want to disable in production
enableCors: false

server:
  rootPath: '/api/*'
  applicationConnectors:
    - type: http
      port: 9090

# Logging settings.
logging:
  level: INFO
  loggers:
    com.hortonworks.registries: INFO
